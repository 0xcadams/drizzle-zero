/* eslint-disable */
/* tslint:disable */
/* noinspection JSUnusedGlobalSymbols */
/*
 * ------------------------------------------------------------
 * ## This file was automatically generated by drizzle-zero  ##
 * ## Any changes you make to this file will be overwritten. ##
 * ##                                                        ##
 * ## SOURCE: https://github.com/BriefHQ/drizzle-zero        ##
 * ------------------------------------------------------------
 */

export type Schema = {
  readonly tables: {
    User: {
      name: "User";
      primaryKey: any;
      columns: {
        readonly id:
          | { optional: false; type: "string"; customType: string }
          | {
              optional: false;
              type: "string";
              customType: string;
              serverName: string;
            };
        readonly email:
          | { optional: false; type: "string"; customType: "email_value" }
          | {
              optional: false;
              type: "string";
              customType: "email_value";
              serverName: string;
            };
        readonly name:
          | { type: "string"; customType: string; optional: true }
          | {
              type: "string";
              customType: string;
              optional: true;
              serverName: string;
            };
      };
    };
  };
  readonly relationships: {
    User: {
      readonly [x: string]: [
        {
          readonly sourceField: string[];
          readonly destField: ("id" | "email" | "name" | "password")[];
          readonly destSchema: "User";
          readonly cardinality: "many";
        },
        {
          readonly sourceField: string[];
          readonly destField: ("id" | "email" | "name" | "password")[];
          readonly destSchema: "User";
          readonly cardinality: "many";
        },
      ];
    };
  };
};

export const schema = {
  tables: {
    User: {
      name: "User",
      columns: {
        id: {
          type: "string",
          optional: false,
          customType: null,
        },
        name: {
          type: "string",
          optional: true,
          customType: null,
        },
        email: {
          type: "string",
          optional: false,
          customType: null,
        },
      },
      primaryKey: ["id"],
      serverName: "user",
    },
  },
  relationships: {},
} as unknown as Schema;
